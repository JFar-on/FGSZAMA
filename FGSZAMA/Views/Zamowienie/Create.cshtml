@model FGSZAMA.Models.ZamowienieViewModel

@{
    ViewData["Title"] = "Create";
}
<!DOCTYPE html>
<html lang="pl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="~/css/zamowienie_create.css">
</head>
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="WybranyZestaw" class="control-label">Zestaw:</label>
                <select asp-for="WybranyZestaw" class="form-control">
                    @foreach (var zestaw in Model.DostepneZestawy)
                    {
                        <option value="@zestaw">@zestaw</option>
                    }
                </select>
                <span asp-validation-for="WybranyZestaw" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="WybranaKalorycznosc" class="control-label">Kaloryczność:</label>
                <select asp-for="WybranaKalorycznosc" class="form-control">
                    @foreach (var opcja in Model.OpcjeKalorycznosci)
                    {
                        <option value="@opcja.Kalorycznosc">
                            @opcja.Kalorycznosc kcal - @opcja.Cena PLN/dzień
                        </option>
                    }
                </select>
                <span asp-validation-for="WybranaKalorycznosc" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DataOd" class="control-label">Od:</label>
                <input asp-for="DataOd" type="date" min="@DateTime.Now.ToString("yyyy-MM-dd")" class="form-control" />
                <span asp-validation-for="DataOd" class="text-danger">Wprowadź datę równą lub wyższą niż @DateTime.Now.ToString("dd-MM-yyyy")!</span>
            </div>
            <div class="form-group">
                <label asp-for="DataDo" class="control-label">Do:</label>
                <input asp-for="DataDo" type="date" min="@DateTime.Now.ToString("yyyy-MM-dd")" class="form-control" />
                <span asp-validation-for="DataDo" class="text-danger">Wprowadź datę równą lub wyższą niż @DateTime.Now.ToString("dd-MM-yyyy")!</span>
            </div>
            <button type="submit" class="btn btn-outline-warning">Zatwierdź
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-bookmark-check-fill" viewBox="0 0 16 16">
                    <path fill-rule="evenodd" d="M2 15.5V2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v13.5a.5.5 0 0 1-.74.439L8 13.069l-5.26 2.87A.5.5 0 0 1 2 15.5m8.854-9.646a.5.5 0 0 0-.708-.708L7.5 7.793 6.354 6.646a.5.5 0 1 0-.708.708l1.5 1.5a.5.5 0 0 0 .708 0z" />
                </svg>
                
            </button>
            <a href="https://localhost:7019/Zamowienie" type="button" class="btn btn-outline-warning">Powrót</a>
            <p> </p>
         
        </form>
    </div>
</div>


@if (!ViewData.ModelState.IsValid)
{
    foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
    {
        <p class="text-danger">@error.ErrorMessage</p>
    }
}

@if (Model.PodsumowanaCena > 0)
{
    <div class="mt-3">
        <h4>Podsumowanie:</h4>
        <p>Całkowita cena: <strong>@Model.PodsumowanaCena PLN</strong></p>
    </div>
}

@if (ViewBag.Sukces != null)
{
    <div class="alert alert-success">@ViewBag.Sukces</div>
}



@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
